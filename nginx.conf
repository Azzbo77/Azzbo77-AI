# nginx.conf
# Configuration for Nginx as a reverse proxy with SSL termination for the AI interface

events {
    # Default event handling configuration (usually empty unless tuning worker_connections)
}

http {
    # Define upstream logging outside the server block for consistency
    access_log /var/log/nginx/access.log;  # Logs requests (mapped to Docker stdout)
    error_log /var/log/nginx/error.log warn;  # Logs errors (mapped to Docker stderr)

    server {
        listen 443 ssl;  # Listens on HTTPS port 443 with SSL enabled
        server_name ${NGINX_SERVER_NAME:-_};  # Uses env var or wildcard (_) for flexibility
        # Example: Set NGINX_SERVER_NAME=yourdomain.com in .env for external access

        # SSL configuration using certificates mounted from /certs
        ssl_certificate /certs/cert.pem;       # Path to SSL certificate
        ssl_certificate_key /certs/key.pem;    # Path to private key

        # Security headers for better protection
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;  # Enforces HTTPS
        add_header X-Content-Type-Options "nosniff";  # Prevents MIME-type sniffing
        add_header X-Frame-Options "DENY";            # Prevents clickjacking

        # Root location for Open WebUI (HTTP traffic)
        location / {
            proxy_pass http://ai-interface:8080;  # Proxies to ai-interface service
            proxy_set_header Host $host;          # Passes original host header
            proxy_set_header X-Real-IP $remote_addr;  # Passes client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Fixed: Correct variable
            proxy_set_header X-Forwarded-Proto $scheme;  # Indicates original protocol (https)
        }

        # WebSocket support for Open WebUI
        location ~* /ws/socket.io/ {  # Matches WebSocket endpoint (verify with Open WebUI docs)
            proxy_pass http://ai-interface:8080;  # Proxies to ai-interface service
            proxy_http_version 1.1;               # Required for WebSocket
            proxy_set_header Upgrade $http_upgrade;  # Handles WebSocket upgrade
            proxy_set_header Connection "Upgrade";   # Confirms upgrade connection
            proxy_set_header Host $host;             # Passes original host
            proxy_set_header X-Real-IP $remote_addr; # Passes client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Fixed: Correct variable
            proxy_set_header X-Forwarded-Proto $scheme;  # Original protocol
            proxy_read_timeout 86400s;  # Long timeout for persistent WebSocket connections
            proxy_send_timeout 86400s;  # Matches read timeout
        }

        # Error handling
        error_page 502 503 504 /50x.html;  # Custom page for gateway errors
        location = /50x.html {
            root /usr/share/nginx/html;  # Default Nginx HTML directory
            internal;                    # Restricts direct access
        }
    }
}